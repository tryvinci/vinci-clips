# Docker Compose configuration for Vinci Clips production
version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: vinci-clips-mongodb-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: vinci-clips
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - vinci-network
    # Don't expose ports in production - access via internal network only
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: vinci-clips-redis-prod
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - vinci-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vinci-clips-backend-prod
    restart: always
    environment:
      # Server config
      PORT: 8080
      NODE_ENV: production
      
      # Database
      DB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/vinci-clips?authSource=admin
      
      # Google Cloud
      GCP_BUCKET_NAME: ${GCP_BUCKET_NAME}
      GCP_SERVICE_ACCOUNT_PATH: /app/gcp-service-account.json
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Security
      CORS_ORIGIN: ${CORS_ORIGIN:-https://yourdomain.com}
    expose:
      - "8080"
    volumes:
      - ./backend/temp:/app/temp
      - ./backend/cache:/app/cache
      - ./backend/logs:/app/logs
      - ${GCP_SERVICE_ACCOUNT_PATH}:/app/gcp-service-account.json:ro
    depends_on:
      - mongodb
      - redis
    networks:
      - vinci-network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  # Frontend Next.js application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vinci-clips-frontend-prod
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-https://api.yourdomain.com}
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - vinci-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: vinci-clips-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - vinci-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  vinci-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local