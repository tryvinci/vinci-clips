steps:
  # 1. Build the backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Backend'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'
      - './backend'

  # 2. Push the backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Backend'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest']
    waitFor: ['Build Backend']

  # 3. Deploy Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Backend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_BACKEND_SERVICE_NAME}'
      - '--image'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - 'vinci-dev@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--update-secrets=DB_URL=DB_URL:latest,DB_NAME=DB_NAME:latest,GCP_BUCKET_NAME=GCP_BUCKET_NAME:latest,GEMINI_API_KEY=GEMINI_API_KEY:latest,GROQ_API_KEY=GROQ_API_KEY:latest,LLM_MODEL=LLM_MODEL:latest,GCP_SERVICE_ACCOUNT_PATH=vinci-dev-serviceaccount:latest'
    waitFor: ['Push Backend']

  # 4. Build the frontend image, passing the live backend URL
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Wait a moment for the service to be fully ready
        sleep 10
        
        # Get the backend URL
        BACKEND_URL=$$(gcloud run services describe ${_BACKEND_SERVICE_NAME} \
          --platform managed \
          --region us-central1 \
          --format 'value(status.url)')
        
        # Verify we got a URL
        if [ -z "$$BACKEND_URL" ]; then
          echo "ERROR: Could not retrieve backend URL"
          exit 1
        fi
        
        # Add trailing slash if not present
        if [[ "$$BACKEND_URL" != */ ]]; then
          BACKEND_URL="$$BACKEND_URL/"
        fi
        
        echo "DEBUG: Retrieved backend URL: $$BACKEND_URL"
        echo "DEBUG: Backend service name: ${_BACKEND_SERVICE_NAME}"
        echo "DEBUG: Project ID: ${PROJECT_ID}"
        
        # Verify the URL format looks correct
        if [[ "$$BACKEND_URL" =~ ^https://.*\.run\.app/$ ]]; then
          echo "DEBUG: URL format looks correct"
        else
          echo "WARNING: URL format might be incorrect: $$BACKEND_URL"
        fi
        
        # Build the frontend with the backend URL
        echo "DEBUG: Building frontend with NEXT_PUBLIC_API_URL=$$BACKEND_URL"
        docker build \
          -t us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest \
          --build-arg NEXT_PUBLIC_API_URL=$$BACKEND_URL \
          ./frontend \
          --progress=plain
        
        # Verify the environment variable was set in the built image
        echo "DEBUG: Verifying environment variable in built image..."
        docker run --rm \
          us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest \
          sh -c "echo 'Environment check:'; env | grep NEXT_PUBLIC_API_URL || echo 'NEXT_PUBLIC_API_URL not found in environment'"
    waitFor: ['Deploy Backend']

  # 5. Push the frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest']
    waitFor: ['Build Frontend']

  # 6. Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Frontend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_FRONTEND_SERVICE_NAME}'
      - '--image'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - 'vinci-dev@${PROJECT_ID}.iam.gserviceaccount.com'
    waitFor: ['Push Frontend']

images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest'
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'

substitutions:
  _FRONTEND_SERVICE_NAME: 'vinci-clips-frontend'
  _BACKEND_SERVICE_NAME: 'vinci-clips-backend'

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1800s'