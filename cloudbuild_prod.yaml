steps:
  # 1. Build and Push Backend
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build and Push Backend'
    args:
      - 'build'
      - '--tag=us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'
      - './backend'

  # 2. Deploy Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Backend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_BACKEND_SERVICE_NAME}'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--update-secrets=DB_URL=DB_URL:latest,DB_NAME=DB_NAME:latest,GCP_BUCKET_NAME=GCP_BUCKET_NAME:latest,GEMINI_API_KEY=GEMINI_API_KEY:latest,GROQ_API_KEY=GROQ_API_KEY:latest,LLM_MODEL=LLM_MODEL:latest'

  # 3. Get Backend URL and create .env file
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Generate Frontend Env File'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$$(gcloud run services describe ${_BACKEND_SERVICE_NAME} --platform managed --region us-central1 --format 'value(status.url)')
        echo "NEXT_PUBLIC_API_URL=$$BACKEND_URL" > frontend/.env.production
        echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}" >> frontend/.env.production
        echo "CLERK_SECRET_KEY=${_CLERK_SECRET_KEY}" >> frontend/.env.production
        echo "NEXT_PUBLIC_CLERK_SIGN_IN_URL=/login" >> frontend/.env.production
        echo "NEXT_PUBLIC_CLERK_SIGN_UP_URL=/signup" >> frontend/.env.production
        echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/upload" >> frontend/.env.production
        echo "NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/upload" >> frontend/.env.production

  # 4. Build Frontend Application (npm run build)
  - name: 'node:20'
    id: 'Install Frontend Dependencies'
    entrypoint: 'npm'
    args: ['install']
    dir: 'frontend'
  - name: 'node:20'
    id: 'Run Next Build'
    entrypoint: 'npm'
    args: ['run', 'build']
    dir: 'frontend'

  # 5. Build Frontend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend Image'
    args:
      - 'build'
      - '--tag=us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest'
      - '.'
    dir: 'frontend'

  # 6. Push Frontend Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest']

  # 7. Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy Frontend'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_FRONTEND_SERVICE_NAME}'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=vinci-dev@${PROJECT_ID}.iam.gserviceaccount.com'

images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-frontend:latest'
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/vinci-clips/vinci-clips-backend:latest'

substitutions:
  _FRONTEND_SERVICE_NAME: 'vinci-clips-frontend'
  _BACKEND_SERVICE_NAME: 'vinci-clips-backend'

options:
  logging: CLOUD_LOGGING_ONLY
timeout: '1800s'