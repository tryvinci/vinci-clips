# Docker Compose configuration for Vinci Clips development
version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: vinci-clips-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: vinci-clips
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - vinci-network

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: vinci-clips-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vinci-network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vinci-clips-backend
    restart: unless-stopped
    environment:
      # Server config
      PORT: 8080
      NODE_ENV: development
      
      # Database
      DB_URL: mongodb://admin:password123@mongodb:27017/vinci-clips?authSource=admin
      
      # Google Cloud (you need to provide these)
      GCP_BUCKET_NAME: ${GCP_BUCKET_NAME}
      GCP_SERVICE_ACCOUNT_PATH: /app/gcp-service-account.json
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/temp:/app/temp
      - ./backend/cache:/app/cache
      - ./backend/logs:/app/logs
      - ${GCP_SERVICE_ACCOUNT_PATH:-./backend/gcp-service-account.json}:/app/gcp-service-account.json:ro
    depends_on:
      - mongodb
      - redis
    networks:
      - vinci-network

  # Frontend Next.js application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vinci-clips-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
    depends_on:
      - backend
    networks:
      - vinci-network

networks:
  vinci-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local